@use "../../lib/common/colors" as color;

$size: 2rem;

#char-container {
  height: inherit;
  position: relative;
}

.char {
  width: $size;
  height: $size;
  position: absolute;
  border: color.$foreground solid 1px;
  box-sizing: border-box;
  display: flex;
  justify-content: center;
  align-items: center;
}

.char-link {
  font-size: $size;
  font-family: monospace;
  line-height: 1;
  pointer-events: none;
  user-select: none;
  position: relative;
  width: inherit;
  height: inherit;
  // text-transform: uppercase;

  &:active,
  &:link,
  &:hover,
  &:visited {
    text-decoration: none;
    color: color.$foreground;
  }
}

.char-content-item {
  position: absolute;
  top: 50%;
  left: 50%;
  transform: translate(-50%, -50%);
  transition: opacity 0.3s ease-out;
  display: inline;
}

.char-primary {
  z-index: 2;
  opacity: 1;
}

.char-secondary {
  z-index: 1;
  opacity: 0;
  width: inherit;
  height: inherit;
}

.char-gatter-animation {
  transition:
    top 1s ease-in-out,
    left 1s ease-in-out,
    transform 1s ease-in-out;
}

.char-spread-animation {
  transition:
    top 0.5s ease-in-out,
    left 0.5s ease-in-out,
    transform 0.5s ease-in-out;
}

.char-outofbounds-animation {
  transition:
    top 0.3s ease,
    left 0.3s ease,
    transform 0.3s ease;
}

.char-no-animation {
  transition: unset;
}

.char-redirecting {
  position: absolute;
  display: flex;
  flex-direction: row;
  align-items: center;
  font-family: sans-serif;
  font-size: 1.3rem;
  font-weight: bold;
  $duration: 3s;
  $duration-quick: 1s;

  &::after {
    content: "";
    width: 100%;
    height: 3px;
    position: absolute;
    bottom: -0.4rem;
  }

  > p {
    margin-right: 0.5rem;
  }

  > img {
    $size: 1.4rem;
    width: $size;
    height: $size;
  }

  &.char-redirecting-hide {
    opacity: 0;
    transition: none;

    > p {
      color: color.$grey;
      transition: none;
    }

    > img {
      @include color.filter-grey;
      transition: none;
    }

    &::after {
      width: 0%;
      background-color: color.$grey;
      transition: none;
    }
  }

  &.char-redirecting-show {
    opacity: 1;
    transition: opacity $duration-quick linear;

    > p {
      color: color.$foreground;
      transition: color $duration ease;
    }

    > img {
      @include color.filter-foreground;
      transition: filter $duration linear;
    }

    &::after {
      width: 100%;
      background-color: color.$foreground;
      transition:
        width $duration ease,
        background-color $duration-quick ease;
    }
  }
}
